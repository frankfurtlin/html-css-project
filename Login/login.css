*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: linear-gradient(#141e30, #243b55);
}

.container{
    width: 400px;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 40px;
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 20px;
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.4);
}

h2{
    color: #fff;
    margin-bottom: 30px;
}

.form-input{
    position: relative;
    width: 100%;
}

input{
    outline: none;
    border: none;
    width: 100%;
    padding: 10px 0;
    margin-bottom: 30px;
    color: #fff;
    font-size: 16px;
    border-bottom: 1px solid #fff;
    background-color: transparent;
}

label {
	position: absolute;
	top: 0;
	left: 0;
	padding: 10px 0;
	color: #fff;
	/* 这个属性的默认值是auto 默认是这个元素可以被点击 但是如果我们写了none 就是这个元素不能被点击 , 就好像它可见但是不能用 可望而不可即 */
	/* 这个就是两者的区别 */
	pointer-events: none;
	/* 加个过渡 */
	transition: all 0.5s;
}
/* :focus 选择器是当input获得焦点是触发的样式 + 是相邻兄弟选择器 去找与input相邻的兄弟label */
/* :valid 选择器是判断input框的内容是否合法,如果合法会执行下面的属性代码,不合法就不会执行,我们刚开始写布局的时候给input框写了required 我们删掉看对比 当没有required的话input框的值就会被认为一直合法,所以一直都是下方的样式 ,但是密码不会,密码框内的值为空,那么这句话局不合法,required不能为空 当我们给密码框写点东西的时候才会执行以下代码*/
input:focus + label,
input:valid + label {
	top: -20px;
	color: #03e9f4;
	font-size: 12px;
}
a {
	overflow: hidden;
	position: relative;
	padding: 10px 20px;
	color: #03e9f4;
	/* 取消a表现原有的下划线 */
	text-decoration: none;
	/* 同样加个过渡 */
	transition: all 0.5s;
}
a:hover {
	color: #fff;
	border-radius: 5px;
	background-color: #03e9f4;
	box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4, 0 0 50px #03e9f4,
		0 0 100px #03e9f4;
}
a span {
	position: absolute;
}
a span:first-child {
	top: 0;
	left: -100%;
	width: 100%;
	height: 2px;
	/* to right 就是往右边 下面的同理 */
	background: linear-gradient(to right, transparent, #03e9f4);
	/* 动画 名称 时长 linear是匀速运动 infinite是无限次运动 */
	animation: move1 1s linear infinite;
}
a span:nth-child(2) {
	right: 0;
	top: -100%;
	width: 2px;
	height: 100%;
	background: linear-gradient(transparent, #03e9f4);
	/* 这里多了个0.25s其实是延迟时间 */
	animation: move2 1s linear 0.25s infinite;
}
a span:nth-child(3) {
	right: -100%;
	bottom: 0;
	width: 100%;
	height: 2px;
	background: linear-gradient(to left, transparent, #03e9f4);
	animation: move3 1s linear 0.5s infinite;
}
a span:last-child {
	left: 0;
	bottom: -100%;
	width: 2px;
	height: 100%;
	background: linear-gradient(#03e9f4, transparent);
	animation: move4 1s linear 0.75s infinite;
}
/* 写一下动画 再坚持一下 视频马上就完了 */
@keyframes move1 {
	0% {
		left: -100%;
	}
	50%,
	100% {
		left: 100%;
	}
}
@keyframes move2 {
	0% {
		top: -100%;
	}
	50%,
	100% {
		top: 100%;
	}
}
@keyframes move3 {
	0% {
		right: -100%;
	}
	50%,
	100% {
		right: 100%;
	}
}
@keyframes move4 {
	0% {
		bottom: -100%;
	}
	50%,
	100% {
		bottom: 100%;
	}
}